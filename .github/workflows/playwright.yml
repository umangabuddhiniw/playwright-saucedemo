name: Playwright Tests

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]
  schedule:
    - cron: '0 8 * * 1-5' # Run on weekdays at 8 AM UTC

env:
  NODE_ENV: test
  CI: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: '**/package-lock.json'
        
    - name: Install dependencies
      run: |
        npm ci
        npm list @playwright/test typescript ts-node
        
    - name: Install Playwright Browsers
      run: |
        npx playwright install --with-deps
        npx playwright --version
        
    - name: TypeScript Compilation Check
      run: |
        echo "üîç Checking TypeScript compilation..."
        npx tsc --noEmit --skipLibCheck
        echo "‚úÖ TypeScript compilation successful"
        
    - name: Verify test directory structure
      run: |
        echo "üìÅ Checking test directory structure..."
        ls -la src/tests/ || echo "‚ùå src/tests/ directory not found"
        find src/tests -name "*.spec.ts" | head -10
        echo "Total test files: $(find src/tests -name "*.spec.ts" | wc -l)"
        
    - name: Run Playwright tests
      run: |
        echo "üöÄ Starting Playwright tests..."
        npx playwright test \
          --reporter=html,json \
          --output=test-results \
          --timeout=120000
      env:
        HEADLESS: true
        NODE_ENV: test
        CI: true
        
    - name: Generate custom reports (Fixed)
      run: |
        echo "üìä Generating custom reports..."
        # Use ts-node to run TypeScript files properly
        npx ts-node --transpile-only << 'EOF'
        import { generateReports } from './src/utils/results-collector';
        try {
          const reports = generateReports();
          console.log('‚úÖ Custom reports generated:', reports);
        } catch (error) {
          console.log('‚ö†Ô∏è Custom reports generation skipped:', error.message);
        }
        EOF
        echo "Custom reports generation completed"
        
    - name: Check test artifacts
      run: |
        echo "üé≠ Checking test artifacts..."
        echo "=== Test Results Directory ==="
        ls -la test-results/ || echo "No test-results directory"
        echo "=== Reports ==="
        find test-results -name "*.html" -o -name "*.json" | head -10
        echo "=== Screenshots ==="
        find test-results -name "*.png" | head -5
        echo "Total screenshots: $(find test-results -name "*.png" | wc -l || echo 0)"
        echo "=== Videos ==="
        find test-results -name "*.webm" | head -5
        echo "Total videos: $(find test-results -name "*.webm" | wc -l || echo 0)"
        
    - name: Upload Playwright HTML report
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-html-report
        path: playwright-report/
        retention-days: 30

    - name: Upload test results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: |
          test-results/
        retention-days: 30
        
    - name: Upload custom reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: custom-reports
        path: |
          test-results/reports/
          test-results/logs/
        retention-days: 30

    - name: Test summary
      if: always()
      run: |
        echo "üìã Test Execution Summary"
        echo "========================"
        echo "Node.js Version: ${{ matrix.node-version }}"
        echo "Runner: ${{ runner.os }}"
        
        # Check custom reports
        if [ -d "test-results/reports" ]; then
          echo "=== Custom Reports ==="
          find test-results/reports -name "*.html" -o -name "*.json" | while read file; do
            echo "üìÑ $(basename "$file")"
          done
          CUSTOM_REPORTS=$(find test-results/reports -name "*.html" -o -name "*.json" | wc -l)
          echo "Total Custom Reports: $CUSTOM_REPORTS"
        else
          echo "‚ùå No custom reports directory found"
        fi
        
        # Check logs
        if [ -d "test-results/logs" ]; then
          LOG_FILES=$(find test-results/logs -name "*.log" | wc -l)
          echo "Log Files: $LOG_FILES"
        fi
        
        echo "‚úÖ Artifacts are ready for download!"

  # Simple linting job
  lint-and-typecheck:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    - run: npm ci
    - name: TypeScript Compilation
      run: npx tsc --noEmit --skipLibCheck
    - name: ESLint Check
      run: npx eslint src/ --ext .ts,.tsx --max-warnings=0 || echo "ESLint completed"