name: Playwright Tests

on:
  push:
    branches: [main, master, develop]
  pull_request:
    branches: [main, master, develop]

env:
  NODE_ENV: test
  CI: true

jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        npx playwright --version
        
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
        
    - name: Verify and Compile TypeScript
      run: |
        echo "=== Verifying TypeScript Setup ==="
        npx tsc --noEmit --skipLibCheck
        echo "✅ TypeScript configuration valid"
        
        echo "=== Compiling TypeScript ==="
        npx tsc --skipLibCheck
        echo "✅ TypeScript compiled successfully"
        
    - name: Run tests with DUAL reporting system
      run: |
        echo "🚀 Starting tests with DUAL reporting system..."
        echo "Custom Reports: test-results/reports/"
        echo "Playwright Reports: playwright-report/"
        
        npx playwright test \
          --reporter=./src/utils/testRunner.ts \
          --reporter=html \
          --reporter=json \
          --reporter=junit \
          --timeout=120000 \
          --retries=2
      env:
        HEADLESS: true
        
    - name: Verify ALL artifacts generated
      run: |
        echo "🔍 VERIFYING ALL ARTIFACTS:"
        
        echo "=== Custom Reports (test-results/reports/) ==="
        find test-results/reports -name "test-report-*" 2>/dev/null | head -5
        echo "Custom report count: $(find test-results/reports -name 'test-report-*' 2>/dev/null | wc -l)"
        
        echo "=== Playwright Reports (playwright-report/) ==="
        ls -la playwright-report/index.html 2>/dev/null && echo "✅ Playwright HTML exists" || echo "❌ No Playwright HTML"
        
        echo "=== Test Results ==="
        ls -la test-results/test-results.json 2>/dev/null && echo "✅ JSON results exist" || echo "❌ No JSON results"
        ls -la test-results/junit-results.xml 2>/dev/null && echo "✅ JUnit results exist" || echo "❌ No JUnit results"
        
        echo "=== Screenshots & Videos ==="
        echo "Screenshots: $(find test-results -name '*.png' 2>/dev/null | wc -l)"
        echo "Videos: $(find test-results -name '*.webm' 2>/dev/null | wc -l)"
        
    - name: Upload ALL artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: playwright-complete-results
        path: |
          test-results/
          playwright-report/
        retention-days: 30

    - name: Test Execution Summary
      if: always()
      run: |
        echo "🎯 DUAL REPORT SYSTEM - EXECUTION COMPLETE"
        echo "=========================================="
        echo "📊 CUSTOM REPORTS: $(find test-results/reports -name 'test-report-*' 2>/dev/null | wc -l) files in test-results/reports/"
        echo "📊 PLAYWRIGHT HTML: $(ls playwright-report/index.html 2>/dev/null && echo '✅ GENERATED' || echo '❌ MISSING')"
        echo "📊 JSON RESULTS: $(ls test-results/test-results.json 2>/dev/null && echo '✅ GENERATED' || echo '❌ MISSING')"
        echo "📊 JUNIT RESULTS: $(ls test-results/junit-results.xml 2>/dev/null && echo '✅ GENERATED' || echo '❌ MISSING')"
        echo ""
        echo "📦 All artifacts uploaded for download"