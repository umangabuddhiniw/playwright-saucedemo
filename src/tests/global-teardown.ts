// src/tests/global-teardown.ts
import { generateReports, getCombinedStats } from '../utils/results-collector';
import { logger } from '../utils/logger';

export default async function globalTeardown(): Promise<void> {
  try {
    console.log('🔚 Global teardown: Starting final cleanup...');
    
    // Note: Reports are now automatically generated by TestRunner reporter
    // We just log the final status
    
    const stats = getCombinedStats();
    console.log('📈 Final Test Statistics:', JSON.stringify(stats, null, 2));

    // Log the directory structure
    console.log(`
📁 Final Test Results Directory Structure:
test-results/
├── reports/                       # ✅ HTML and JSON reports
│   ├── test-report-*.html
│   └── test-report-*.json
├── logs/                          # Winston logs
│   ├── debug.log
│   ├── errors.log
│   └── test-execution.log
├── screenshots/                   # Manual screenshots
│   └── *.png
├── *-video-*/                     # Video recordings
│   └── video.webm
└── test-results.json              # JSON test results

playwright-report/                 # ✅ HTML reports (alternative location)
├── data/
├── index.html
└── trace/
    `);

    logger.info('Global teardown completed', {
      totalTests: stats.combined.totalTests,
      successRate: stats.combined.successRate,
      environment: stats.combined.environment,
      timestamp: new Date().toISOString()
    });

    console.log('✅ Global teardown completed successfully');

  } catch (error) {
    console.error('❌ Global teardown failed:', error);
    logger.error('Global teardown failed', {
      error: error instanceof Error ? error.message : 'Unknown error'
    });
    
    // Ensure process exits with error code in CI
    if (process.env.CI) {
      process.exit(1);
    }
  }
}